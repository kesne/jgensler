{"ast":null,"code":"var _jsxFileName = \"/Users/jgensler/dev/jgensler/pages/blog/[slug].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport mdx from '@mdx-js/mdx';\nimport Post from '../../components/Post';\nimport { getPosts } from '../../posts';\nimport withLayout from '../../components/Layout';\n\nfunction Blog({\n  post\n}) {\n  return __jsx(Post, _extends({}, post, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }\n  }));\n}\n\nexport const getStaticPaths = async () => {\n  const posts = await getPosts();\n  return {\n    paths: posts.map(post => ({\n      params: {\n        slug: post.attributes.slug\n      }\n    })),\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const posts = await getPosts();\n  const post = posts.find(post => post.attributes.slug === params.slug);\n  console.log(await mdx(post === null || post === void 0 ? void 0 : post.body));\n  return {\n    props: {\n      post: 'hello world'\n    }\n  };\n};\nexport default withLayout(Blog);","map":{"version":3,"sources":["/Users/jgensler/dev/jgensler/pages/blog/[slug].tsx"],"names":["mdx","Post","getPosts","withLayout","Blog","post","getStaticPaths","posts","paths","map","params","slug","attributes","fallback","getStaticProps","find","console","log","body","props"],"mappings":";;;;;;AACA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA6B;AACzB,SAAO,MAAC,IAAD,eAAUA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH;;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACtD,QAAMC,KAAK,GAAG,MAAML,QAAQ,EAA5B;AAEA,SAAO;AACHM,IAAAA,KAAK,EAAED,KAAK,CAACE,GAAN,CAAUJ,IAAI,KAAK;AACtBK,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAEN,IAAI,CAACO,UAAL,CAAgBD;AADlB;AADc,KAAL,CAAd,CADJ;AAMHE,IAAAA,QAAQ,EAAE;AANP,GAAP;AAQH,CAXM;AAaP,OAAO,MAAMC,cAA8B,GAAG,OAAO;AAAEJ,EAAAA;AAAF,CAAP,KAAsB;AAChE,QAAMH,KAAK,GAAG,MAAML,QAAQ,EAA5B;AAEA,QAAMG,IAAI,GAAGE,KAAK,CAACQ,IAAN,CAAWV,IAAI,IAAIA,IAAI,CAACO,UAAL,CAAgBD,IAAhB,KAAyBD,MAAM,CAAEC,IAApD,CAAb;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAMjB,GAAG,CAACK,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEa,IAAP,CAArB;AAEA,SAAO;AACHC,IAAAA,KAAK,EAAE;AACHd,MAAAA,IAAI,EAAE;AADH;AADJ,GAAP;AAKH,CAZM;AAcP,eAAeF,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import { GetStaticPaths, GetStaticProps } from 'next';\nimport mdx from '@mdx-js/mdx';\nimport Post from '../../components/Post';\nimport { getPosts } from '../../posts';\nimport withLayout from '../../components/Layout';\n\nfunction Blog({ post }: any) {\n    return <Post {...post} />;\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n    const posts = await getPosts();\n\n    return {\n        paths: posts.map(post => ({\n            params: {\n                slug: post.attributes.slug,\n            },\n        })),\n        fallback: false,\n    };\n};\n\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\n    const posts = await getPosts();\n\n    const post = posts.find(post => post.attributes.slug === params!.slug);\n\n    console.log(await mdx(post?.body));\n\n    return {\n        props: {\n            post: 'hello world',\n        },\n    };\n};\n\nexport default withLayout(Blog);\n"]},"metadata":{},"sourceType":"module"}